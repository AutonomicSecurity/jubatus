def options(ctx): pass

subdirs = "engine window"

def configure(ctx): pass

def build(bld):
  bld.recurse(subdirs)
  bld.shlib(
    source = [
        'burst_storage_base.cpp',
        'burst_local_storage.cpp',
        'burst_distributed_storage.cpp',
        'burst_system_manager.cpp',
        'burst_system_builder.cpp',
        'burst_system.cpp',
        'cht_local.cpp',
        'my_keyword_list.cpp',
        'burst_zk.cpp',
        'mix_data.cpp',
    ],
    target = 'jubatus_burst',
    name = 'jubatus_burst',
    includes = '.',
    use = 'PFICOMMON jubacommon jubatus_burst_system jubaserv_common MSGPACK')

  test_src = [
    'burst_distributed_storage_test.cpp',
    'burst_local_storage_test.cpp',
    'burst_system_test.cpp',
    'burst_system_manager_test.cpp',
    'cht_local_test.cpp',
    'my_keyword_list_test.cpp',
  ]

  def make_test(s):
    bld.program(
      features = 'gtest',
      source = s,
      target = s[0:s.rfind('.')],
      includes = '.',
      use = 'jubatus_burst jubatus_burst_system')
  for s in test_src:
    make_test(s)

  bld.install_files('${PREFIX}/include/jubatus/core/burst', [
        'burst_storage_base.hpp',
        'burst_local_storage.hpp',
        'burst_distributed_storage.hpp',
        'burst_system_manager.hpp',
        'burst_system_builder.cpp',
        'burst_system.hpp',
        'mixable_burst.hpp',
        'cht_local.hpp',
        'my_keyword_list.hpp',
        'burst_zk.hpp',
        'mix_data.hpp',
      ])
